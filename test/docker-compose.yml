version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: auth_service
      JWT_KEY: secure_jwt_key_for_production
      GRPC_PORT: 50051
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "50051:50051"
    networks:
      - app-network

  call-service:
    build:
      context: ./call-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: call_service
      AUTH_SERVICE_ADDR: auth-service:50051
      HTTP_PORT: 8080
    depends_on:
      - auth-service
      - postgres
    ports:
      - "8080:8080"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: